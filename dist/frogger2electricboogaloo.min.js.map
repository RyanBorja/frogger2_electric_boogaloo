{"version":3,"sources":["webpack://frogger2electricboogaloo/webpack/universalModuleDefinition","webpack://frogger2electricboogaloo/webpack/bootstrap","webpack://frogger2electricboogaloo/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","game","document","getElementById","ctx","getContext","newGameBtn","pressSpaceToContinue","sprites","Image","deathSprite","gameOverSprite","src","score","currentScore","highScore","localStorage","lives","frogWidth","frogHeight","frogStartX","frogStartY","frogX","frogY","status","rowHeight","height","gameSpeed","logbreakpoint","logstartpoint","breakpoint","startpoint1","startpoint2","startpoint3","homeSpaceArray","style","display","onclick","console","log","obstacleArray","Obstacle","source","sourcex","sourcey","sourcewidth","sourceheight","destx","desty","destwidth","destheight","direction","speed","reset","this","sx","sy","sw","sh","dx","dy","dw","dh","resetAtXvalue","draw","drawImage","update","isMoveOnScreen","x","y","width","indexOf","winner","addEventListener","event","keypress","move","keyCode","setInterval","clearRect","fillStyle","fillRect","font","fillText","drawBackground","length","gameLogic","obs","carCollision","count","j","waterCollision","logRide","animate"],"mappings":"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","file":"dist/frogger2electricboogaloo.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"frogger2electricboogaloo\"] = factory();\n\telse\n\t\troot[\"frogger2electricboogaloo\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// Initialize canvas element\nvar game = document.getElementById('game');\nvar ctx = game.getContext('2d');\nvar newGameBtn = document.getElementById('newGameBtn');\nvar pressSpaceToContinue = document.getElementById('pressSpaceToContinue');\n// Include sprites\nvar sprites = new Image();\nvar deathSprite = new Image();\nvar gameOverSprite = new Image();\n\nsprites.src = 'assets/frogger-sprites.png';\ndeathSprite.src = 'assets/skull-sprite.png'\ngameOverSprite.src = 'assets/gameOverSprite.png';\n\n// Set score variables\n// currentScore is used to ensure you only gain points when you reach a\n// new max row, it's a running total at any point and can decrement.\nvar score = 0;\nvar currentScore = 0;\nvar highScore = 0;\nif (window.localStorage['highScore']) {\n    highScore = localStorage['highScore'];\n}\n\nvar lives = 3;\n\n// Original Frog Size from Sprite Sheet\nvar frogWidth = 30;\nvar frogHeight = 22;\n\n// Frog starting position\nvar frogStartX = 200;\nvar frogStartY = 530;\n\n\n//Place the frog at the start point initially\nvar frogX = frogStartX;\nvar frogY = frogStartY;\n\n\n// status decides which sprite to display currently, either a directional\n// frog sprite or the death sprite. [up, down, left, right, dead]\nvar status = 'up';\n\nvar rowHeight = game.height/15;\n\n// Sets game speed by rendering a frame every xx milliseconds\n\nvar gameSpeed = 12;\n\nvar logbreakpoint = [527, 621, 560];\nvar logstartpoint = [-87, -320, -553, -181, -508, -835, -120, -386, -652];\n\nvar breakpoint = [-27, 470, -30, 470, -50, -33, -33];\n\nvar startpoint1 = [440, -30, 440, -30, 440, 440, 440];\nvar startpoint2 = [613, -206, 616, -206, 636, 473, 473];\nvar startpoint3 = [759, -382, 792, -382, 832, 506, 506];\n\n\n// moved desty , destwidth and destheight elements from Obstacle objects in obstacleArray\n// to own arrays for easier manipulation\nvar desty = [490, 450, 410, 370, 330, 250, 210, 170, 130, 120];\n\n//flags to check for occupied home spaces\nvar homeSpaceArray = [0,0,0,0,0];\n\nvar destwidth = [27, 30, 30, 30, 50, 33, 87, 181, 33, 120];\n\nvar destheight = [28, 23, 23, 27, 21, 25, 24, 24, 25, 24];\n\npressSpaceToContinue.style.display = 'none';\nnewGameBtn.style.display = 'none';\nnewGameBtn.onclick = newGame;\n\n\n\n\n\n\n\n// OBSTACLES\n// first row: purple yello car, right to left, slow [0]\n// second row: bulldozer car, left to right, slow [1]\n// third row: purple car, right to left, medium speed [2]\n// fourth row: green and white car, left to right, medium speed [3]\n// fifth row: freight truck car, right to left, fast [4]\n// sixth row: turts x 3, slow [5]\n// seventh row: small log, slow [6]\n// eith row: large log, fast [7]\n// ninth row: turts x 2, fast [8]\n// tenth row: medium logs, medium speed [9]\n\nvar obstacleArray = [\n    // road obstacles\n    // car row 1\n    new Obstacle(sprites, 80, 262, 27, 28, startpoint1[0], 490, 27, 28, 'from right to left', 'slow', breakpoint[0]),\n    new Obstacle(sprites, 80, 262, 27, 28, startpoint2[0], 490, 27, 28, 'from right to left', 'slow', breakpoint[0]),\n    new Obstacle(sprites, 80, 262, 27, 28, startpoint3[0], 490, 27, 28, 'from right to left', 'slow', breakpoint[0]),\n    // car row 2\n    new Obstacle(sprites, 70, 300, 30, 23, startpoint1[1], 450, 30, 23, 'from left to right', 'slow', breakpoint[1]),\n    new Obstacle(sprites, 70, 300, 30, 23, startpoint2[1], 450, 30, 23, 'from left to right', 'slow', breakpoint[1]),\n    new Obstacle(sprites, 70, 300, 30, 23, startpoint3[1], 450, 30, 23, 'from left to right', 'slow', breakpoint[1]),\n    // car row 3\n    new Obstacle(sprites, 10, 265, 30, 23, startpoint1[2], 410, 30, 23, 'from right to left', 'medium', breakpoint[2]),\n    new Obstacle(sprites, 10, 265, 30, 23, startpoint2[2], 410, 30, 23, 'from right to left', 'medium', breakpoint[2]),\n    new Obstacle(sprites, 10, 265, 30, 23, startpoint3[2], 410, 30, 23, 'from right to left', 'medium', breakpoint[2]),\n    // car row 4\n    new Obstacle(sprites, 45, 263, 30, 27, startpoint1[3], 370, 30, 27, 'from left to right', 'medium', breakpoint[3]),\n    new Obstacle(sprites, 45, 263, 30, 27, startpoint2[3], 370, 30, 27, 'from left to right', 'medium', breakpoint[3]),\n    new Obstacle(sprites, 45, 263, 30, 27, startpoint3[3], 370, 30, 27, 'from left to right', 'medium', breakpoint[3]),\n    // car row 5\n    new Obstacle(sprites, 105, 300, 50, 21, startpoint1[4], 330, 50, 21, 'from right to left', 'fast', breakpoint[4]),\n    new Obstacle(sprites, 105, 300, 50, 21, startpoint2[4], 330, 50, 21, 'from right to left', 'fast', breakpoint[4]),\n    new Obstacle(sprites, 105, 300, 50, 21, startpoint3[4], 330, 50, 21, 'from right to left', 'fast', breakpoint[4]),\n    // water obstacles\n    // water row 1\n    new Obstacle(sprites, 14, 405, 33, 25, startpoint1[5], 250, 33, 25, 'from right to left', 'slow', breakpoint[5]),\n    new Obstacle(sprites, 14, 405, 33, 25, startpoint2[5], 250, 33, 25, 'from right to left', 'slow', breakpoint[5]),\n    new Obstacle(sprites, 14, 405, 33, 25, startpoint3[5], 250, 33, 25, 'from right to left', 'slow', breakpoint[5]),\n    // water row 2\n    new Obstacle(sprites, 6, 228, 87, 24, logstartpoint[0], 210, 87, 24, 'from left to right', 'slow', logbreakpoint[0]),\n    new Obstacle(sprites, 6, 228, 87, 24, logstartpoint[1], 210, 87, 24, 'from left to right', 'slow', logbreakpoint[0]),\n    new Obstacle(sprites, 6, 228, 87, 24, logstartpoint[2], 210, 87, 24, 'from left to right', 'slow', logbreakpoint[0]),\n    // water row 3\n    new Obstacle(sprites, 6, 164, 181, 24, logstartpoint[3], 170, 181, 24, 'from left to right', 'fast', logbreakpoint[1]),\n    new Obstacle(sprites, 6, 164, 181, 24, logstartpoint[4], 170, 181, 24, 'from left to right', 'fast', logbreakpoint[1]),\n    new Obstacle(sprites, 6, 164, 181, 24, logstartpoint[5], 170, 181, 24, 'from left to right', 'fast', logbreakpoint[1]),\n    // water row 4\n    new Obstacle(sprites, 14, 405, 33, 25, startpoint1[6], 130, 33, 25, 'from right to left', 'fast', breakpoint[6]),\n    new Obstacle(sprites, 14, 405, 33, 25, startpoint2[6], 130, 33, 25, 'from right to left', 'fast', breakpoint[6]),\n    new Obstacle(sprites, 14, 405, 33, 25, startpoint3[6], 130, 33, 25, 'from right to left', 'fast', breakpoint[6]),\n    // water row 5\n    new Obstacle(sprites, 6, 196, 120, 24, logstartpoint[6], 90, 120, 24, 'from left to right', 'medium', logbreakpoint[2]),\n    new Obstacle(sprites, 6, 196, 120, 24, logstartpoint[7], 90, 120, 24, 'from left to right', 'medium', logbreakpoint[2]),\n    new Obstacle(sprites, 6, 196, 120, 24, logstartpoint[8], 90, 120, 24, 'from left to right', 'medium', logbreakpoint[2])\n];\n\nwindow.addEventListener('keydown',\n    function(event) {\n        if (lives > 0) {\n        var keypress = event.keyCode;\n        move(keypress);\n        }\n    })\n\nfunction Obstacle(source, sourcex, sourcey, sourcewidth, sourceheight, destx, desty, destwidth, destheight, direction, speed, reset) {\n    this.s = source;\n    this.sx = sourcex;\n    this.sy = sourcey;\n    this.sw = sourcewidth;\n    this.sh = sourceheight;\n    this.dx = destx;\n    this.dy = desty;\n    this.dw = destwidth;\n    this.dh = destheight;\n    this.direction= direction;\n    this.speed= speed;\n    this.resetAtXvalue= reset;\n    // draws the obstacle\n    this.draw= function(){\n        ctx.drawImage(this.s, this.sx, this.sy, this.sw, this.sh, this.dx, this.dy, this.dw, this.dh);\n    }\n    // updates the obstacle to show movement\n    this.update= function(){\n        if(this.direction == 'from left to right'){\n            if(this.speed == 'slow'){\n                this.dx += .5;\n                if (this.dx > this.resetAtXvalue && this.resetAtXvalue === logbreakpoint[0]){\n                    this.dx = -174;\n                }\n                if(this.dx > this.resetAtXvalue && this.resetAtXvalue != logbreakpoint[0]){\n                    this.dx = -30;\n                }\n            }\n            if(this.speed == 'medium'){\n                this.dx += 1;\n                if (this.dx > this.resetAtXvalue && this.resetAtXvalue === logbreakpoint[2]){\n                    this.dx = -240;\n                }\n                if(this.dx > this.resetAtXvalue && this.resetAtXvalue != logbreakpoint[2]){\n                    this.dx = -30;\n                }\n            }\n            if(this.speed == 'fast'){\n                this.dx += 1.25;\n                if (this.dx > this.resetAtXvalue && this.resetAtXvalue === logbreakpoint[1]){\n                    this.dx = -362;\n                }\n                if(this.dx > this.resetAtXvalue && this.resetAtXvalue != logbreakpoint[1]){\n                    this.dx = -30;\n                }\n            }\n        }\n        if(this.direction == 'from right to left'){\n            if(this.speed == 'slow'){\n                this.dx -= .5;\n                if(this.dx < this.resetAtXvalue){\n                    this.dx = 470;\n                }\n            }\n            if(this.speed == 'medium'){\n                this.dx -= 1;\n                if(this.dx < this.resetAtXvalue){\n                    this.dx = 470;\n                }\n            }\n            if(this.speed == 'fast'){\n                this.dx -= 1.25;\n                if(this.dx < this.resetAtXvalue){\n                    this.dx = 490;\n                }\n            }\n        }\n        this.draw();\n    }\n}\n\n// TODO\n    // onREadyState function\n        // Load background and frog in starting position\n        // Object movement function\n        // Collision function\n        // Reset function\n        // Play function\n            // Allows frog movement from user input\n            // Refreshes score\n            // Run collision function\nsetInterval(gameTime, gameSpeed);\n\nfunction gameTime() {\n    if (status != 'dead') {\n        animate();\n    }\n    else {\n        reset();\n    }\n}\n\nfunction animate() {\n    // Game loop, runs every frame,\n\n    // clears the canvas every before rendering new frame.\n    ctx.clearRect(0, 0, game.width, game.height);\n\n    // calls these functions every frame\n    drawBackground();\n    // draws the obstacles\n    for(var i =0; i < obstacleArray.length; i++){\n        obstacleArray[i].update();\n    }\n    // checks game logic\n    gameLogic();\n    drawFrog();\n    carCollision();\n    waterCollision();\n    logRide();\n    winner();\n    pressSpaceToContinue.style.display = 'none';\n}\n\n// Render background\nfunction drawBackground() {\n    // water\n    ctx.fillStyle = '#4d94ff';\n    ctx.fillRect(0, rowHeight, game.width, rowHeight*6);\n    // road\n    ctx.fillStyle = '#404040';\n    ctx.fillRect(0, rowHeight*7, game.width, rowHeight*6);\n    // safe zone bottom\n    ctx.drawImage(sprites, 0, 120, 399, 35, 0, rowHeight*13, game.width, rowHeight);\n    // safe zone middle\n    ctx.drawImage(sprites, 0, 120, 399, 35, 0, rowHeight*7, game.width, rowHeight);\n    // grass\n    ctx.drawImage(sprites, 0, 54, 399, 56, 0, rowHeight, game.width, rowHeight);\n\n\n\n    //if first homeSpaceArray flag is triggered, first home space is occupied\n    if (homeSpaceArray[0] > 0){\n      ctx.drawImage(sprites, 74, 365, 30, 22, 15, 50, frogWidth, frogHeight);\n    };\n    //if second homeSpaceArray flag is triggered, second home space is occupied\n    if (homeSpaceArray[1] > 0){\n      ctx.drawImage(sprites, 74, 365, 30, 22, 105, 50, frogWidth, frogHeight);\n    };\n    //if third homeSpaceArray flag is triggered, third home space is occupied\n    if (homeSpaceArray[2] > 0){\n      ctx.drawImage(sprites, 74, 365, 30, 22, 200, 50, frogWidth, frogHeight);\n    };\n    //if fourth homeSpaceArray flag is triggered, fourth home space is occupied\n    if (homeSpaceArray[3] > 0){\n      ctx.drawImage(sprites, 74, 365, 30, 22, 295, 50, frogWidth, frogHeight);\n    };\n    //if fifth homeSpaceArray flag is triggered, fifth home space is occupied\n    if (homeSpaceArray[4] > 0){\n      ctx.drawImage(sprites, 74, 365, 30, 22, 388, 50, frogWidth, frogHeight);\n    };\n\n\n    // top black stripe\n    ctx.fillStyle = '#000';\n    ctx.fillRect(0, 0, game.width, rowHeight*1.1);\n    // bottom black stripe\n    ctx.fillRect(0, rowHeight*13.9, game.width, rowHeight*1.1);\n    //  Score and high score text\n    ctx.font = 'bold 24px VT323';\n    ctx.fillStyle = \"white\";\n    ctx.fillText('SCORE', 10, 18);\n    ctx.fillText('HIGH SCORE', 300, 18);\n}\n\nfunction drawFrog() {\n    // If alive draws the frog with it's new position values\n    if ( status == 'left' ) {\n        ctx.drawImage(sprites, 80, 335, 30, 22, frogX, frogY, frogWidth, frogHeight);\n    }\n\n    else if ( status == 'up' ) {\n        ctx.drawImage(sprites, 10, 365, 30, 22, frogX, frogY, frogWidth, frogHeight);\n    }\n\n    else if ( status == 'right' ) {\n        ctx.drawImage(sprites, 12, 335, 30, 22, frogX, frogY, frogWidth, frogHeight);\n    }\n\n    else if ( status == 'down' ) {\n        ctx.drawImage(sprites, 74, 365, 30, 22, frogX, frogY, frogWidth, frogHeight);\n    }\n\n    // If collion occurs draw deathSprite in that position\n    else if ( status == 'dead' ) {\n        ctx.drawImage(deathSprite, frogX, frogY, frogWidth, frogHeight);\n    }\n}\n\n// Frog movement\nfunction move(keypress) {\n\n    if (keypress == 37 && isMoveOnScreen(frogX-rowHeight, frogY)) {\n        frogX -= rowHeight;\n        status = 'left';\n    }\n    else if (keypress == 38 && isMoveOnScreen(frogX, frogY-rowHeight)) {\n        frogY -= rowHeight;\n        status = 'up';\n        currentScore += 10;\n    }\n    else if (keypress == 39 && isMoveOnScreen(frogX+rowHeight, frogY)) {\n        frogX += rowHeight;\n        status = 'right';\n    }\n    else if (keypress == 40 && isMoveOnScreen(frogX, frogY+rowHeight)) {\n        frogY += rowHeight;\n        status = 'down';\n        currentScore -= 10;\n    }\n    else if (keypress == 32){\n        frogY = frogY;\n        status = 'up';\n    }\n}\n\n// Check if proposed move is valid (on screen)\nfunction isMoveOnScreen(x,y) {\n    if (x >= 0 && x < game.width-frogWidth && y > rowHeight && y < game.height-rowHeight) {\n        return true;\n    }\n    else {\n        console.log('false', x, y);\n        return false;\n    }\n}\n\n\n// GAME LOGIC\nfunction gameLogic() {\n    // If statement to prevent score from decrementing, currentScore\n    // is never shown.\n    if (currentScore > score) {\n        score = currentScore;\n    }\n\n    if (score > highScore) {\n        localStorage['highScore'] = score;\n        highScore = score;\n    }\n\n    ctx.fillText('' + score + '', 10, 38);\n    ctx.fillText('' + highScore + '', 300, 38);\n\n    for (var i = 0; i < lives; i++) {\n        ctx.drawImage(sprites, 10, 365, 30, 22, 5+(30*i), 565, 30, 22)\n    }\n}\n\nfunction carCollision() {\n\n     // For loop to check every obstacleX\n    for (var i = 0; i < 15; i++) {\n        var obs = obstacleArray[i];\n        if (frogY == obs.dy && ((frogX < obs.dx + obs.dw/2) && (frogX > obs.dx - obs.dw/2))) {\n\n           // Decrement lives\n           lives--;\n           status = 'dead';\n           ctx.drawImage(deathSprite, frogX, frogY, frogWidth, frogHeight);\n        }\n    }\n}\n\nfunction waterCollision() {\n    for (var i = 15; i < 30; i = i+3) {\n        var obs = obstacleArray[i];\n        var count = 0;\n\n        // With three objects on every row we have to check for collisions with\n        // all three to see if frog is in the water\n        for (var j = 0; j < 3; j++) {\n            obs = obstacleArray[i+j];\n            if (i >= 15 && frogY == obs.dy && ((frogX > obs.dx + obs.dw) || (frogX < obs.dx - obs.dw/2))) {\n                count++;\n            }\n            // If frog is not on any of the three objects in a row then frog\n            // is dead\n        if (count == 3) {\n\n          status = 'dead';\n          lives--;\n          ctx.drawImage(deathSprite, frogX, frogY, frogWidth, frogHeight);\n\n            }\n        }\n    }\n}\n\nfunction logRide() {\n\n    // For loop to check every obstacleX\n    for (var i = 15; i < 30; i++) {\n        var obs = obstacleArray[i];\n\n        // If frog is on an object in the water\n        if (frogY == obs.dy && ((frogX < obs.dx + obs.dw) && (frogX > obs.dx))) {\n\n            // Increment frog position according to object speed\n            if(obs.direction == 'from left to right'){\n                if(obs.speed == 'slow'){\n                    frogX += .5;\n                }\n                if(obs.speed == 'medium'){\n                    frogX += 1;\n                }\n                if(obs.speed == 'fast'){\n                    frogX += 1.25;\n                }\n            }\n            if(obs.direction == 'from right to left'){\n                if(obs.speed == 'slow'){\n                    frogX -= .5;\n                }\n                if(obs.speed == 'medium'){\n                    frogX -= 1;\n                }\n                if(obs.speed == 'fast'){\n                    frogX -= 1.25;\n                }\n            }\n        }\n    }\n}\n\n\nfunction reset() {\n    frogX = frogStartX;\n    frogY = frogStartY;\n\n    //checks if all home spaces are occupied\n    if (homeSpaceArray.indexOf(0) == -1){\n      console.log('Victory!')\n      //clears all home spaces\n      homeSpaceArray = [0,0,0,0,0];\n      //awards extra life\n      lives++;\n      gameSpeed = (gameSpeed * .9)\n      }\n    if (!winner()) {\n        score = 0;\n        currentScore = 0;\n    }\n    if (lives != 0){\n      pressSpaceToContinue.style.display = 'inline-block';\n    }\n    if (lives == 0) {\n        // Display losing message\n        ctx.drawImage(gameOverSprite, 85, 170, game.width/1.57, game.height/2.14);\n        newGameBtn.style.display = 'inline-block';\n    }\n}\n\n\nfunction newGame(){\n  console.log('starting new game');\n   score = 0;\n   currentScore = 0;\n   highScore = 0;\n  if (window.localStorage['highScore']) {\n      highScore = localStorage['highScore'];\n  }\n  lives = 3;\n  frogX = frogStartX;\n  frogY = frogStartY;\n  status = 'up';\n  gameSpeed = 10;\n\n  homeSpaceArray = [0,0,0,0,0];\n  newGameBtn.style.display = 'none';\n}\n\nfunction winner() {\n    //if frog jumps in first homespace and it is empty\n    if (frogY == 50) {\n        if (frogX > 5 && frogX < 25 && homeSpaceArray[0] == 0) {\n            currentScore = score + 300;\n            //triggers first homespace flag\n            homeSpaceArray[0]++;\n            // console.log(frogX);\n            reset();\n        } \n        //if frog jumps in second homespace and it is empty\n        else if (frogX > 95 && frogX < 115 && homeSpaceArray[1] == 0) {\n            currentScore = score + 300;\n            //triggers second homespace flag\n            homeSpaceArray[1]++;\n            // console.log(frogX);\n            reset();\n            }\n        //if frog jumps in third homespace and it is empty\n        else if (frogX > 190 && frogX < 215 && homeSpaceArray[2] == 0) {\n            currentScore = score + 300;\n            //triggers third homespace flag\n            homeSpaceArray[2]++;\n            // console.log(frogX);\n            reset();\n            }\n        //if frog jumps in fourth homespace and it is empty\n        else if (frogX > 285 && frogX < 305 && homeSpaceArray[3] == 0) {\n            currentScore = score + 300;\n            //triggers fourth homespace flag\n            homeSpaceArray[3]++;\n            // console.log(frogX);\n            reset();\n            }\n        //if frog jumps in fifth homespace and it is empty\n        else if (frogX > 378 && frogX < 398 && homeSpaceArray[4] == 0) {\n            currentScore = score + 300;\n            //triggers fifth homespace flag\n            homeSpaceArray[4]++;\n            // console.log(frogX);\n            reset();\n            }\n        //if frog doesn't jump in empty homespace\n        else {\n            ctx.drawImage(deathSprite, frogX, frogY, 30, 22);\n            lives--;\n            frogX = 200;\n            frogY = 530;\n            status = 'dead';\n            if (lives == 0) {\n                // Display losing message\n                ctx.drawImage(gameOverSprite, 85, 170, 280, 280);\n                newGameBtn.style.display = 'inline-block';\n            }\n        }\n    }\n\n    return true;\n}\n"],"sourceRoot":""}